{
	"info": {
		"_postman_id": "8d9874d5-4647-424e-aa9a-79546081adb9",
		"name": "Coffeeshop-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28213384"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Value contains drinks array', function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to see details of drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to add new drink', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to edit drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to delete any drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWFmYjUxYTYxNWU1YzliMWUxZjAzNSIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTAwMDAyOSwiZXhwIjoxNjg5MDA3MjI5LCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyJdfQ.JsJvFiYNNqp6TyuqgUUHl9y3Iiqs6Ip-K8cWgoXJ-o_R8SDkSuoPF5d68CYsPTcPJkSSsXHkzOuqs3SFg2HZhVpuoMRjLQt0xZ1flvFvAWsYrGRyvPdZ0_DrQs3yhn9yt8yiFnr58XAR1vO1UIpFF3hQz8RLDnneByQUXZP17dP5KZBfS5Z-X2qRf_f4rpq5H6P-cytZdDhyq6bx6ugcWnBK_24FI_DfEy044McDjAbx2pHtKCUoGI9LtwI9yiPBXgKJvJXaeKJdFM1zxiYVFheFMVG-4s_dI_5l7k51pvM91z_8klj_3L6wuz_eYL423tyDaOrp-BWCrA5KyDt1_Q",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Value contains drinks array', function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200',function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403, since Barista doesn't have permission to add new drink\", function(){\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403, since barista is forbidden to edit drink recipe\", function() {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 403, since barista is not allowed to delete a drink\", function() {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWJiZGY5NDJjYzMwMzI3MThiYjk1YiIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTAwMDEyNiwiZXhwIjoxNjg5MDA3MzI2LCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.uODPPf5ozKgxtdbWQpe6NxTg20rl2dW8937vvcuoXcmXEYvBuXLXv4a4WBlfBlInEBeNnF-WYYCc0na1r_JWzdBv5aiKs83TB45tOqXTrZwigk8KNvnMUSkPw2T7wAy89s_ZP72CGSPfpxPB-iwZrpLOR36KBo1s5jFMoQZIK2TINpg4VtwnlRslbbq65FTVyzc_JlLJ_97IW89vVKu47xLOWgE-wPQ61IuD9MY29frpFeZnZSgW5fAJUhrqgdueBcs_Oeflyf3J_wiPAgX7FHdT-IZBrXw-wOVkUcEkEQBf4yvx6GIkQXUkdIja2b5E4dmmMk4Qjl2TAvGhudb5Uw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contains drinks array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200,\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contain drinks array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contains array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Water3\",\r\n    \"recipe\":[{\r\n        \"name\": \"Water\",\r\n        \"color\": \"blue\",\r\n        \"parts\": 1\r\n    }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contain array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Water3\",\r\n    \"recipe\":{\r\n        \"name\": \"Water\",\r\n        \"color\": \"lightblue\",\r\n        \"parts\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/drinks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWJjYzgwNDJjYzMwMzI3MThiYmIyZiIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTAwNTc2MiwiZXhwIjoxNjg5MDEyOTYyLCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.H3PUOf5Hhi4DZC1ptYpYP-jCjByEbQ6LfqI9_7ZL_zUC5gvoytF-dL4ZEV9DBya-3no1b-Mi8pF9UELeUjxi5SnqmZ9XbmQfCOBY7JxLXy8um_Mms8jKCtYZxeuCqHOpizlCH4ut9XJxzAuEWiqaxpAvaVbxElJep-OcW5o7J0bF2155fzcyBIRrN42vAjylLOmA_M2OpBTfbWFLX9YPtpUmPHUb4D6oGAYOw0DrfPSVUbYWaogqSopPjyf1JAoj8GdUcDS84DQJ0v4dW-MbEGbTOUA34fGMrCvc3HjefDcOcYnbbmbLqga_Z0yCAO9ZYYtCcKMcnhjeFWqdaXpsVg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}