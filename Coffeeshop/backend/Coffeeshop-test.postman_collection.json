{
	"info": {
		"_postman_id": "8d9874d5-4647-424e-aa9a-79546081adb9",
		"name": "Coffeeshop-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28213384"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Value contains drinks array', function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to see details of drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to add new drink', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to edit drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401 since users are not authorized to delete any drinks', function() {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWNmZDExYzM1OWI1ZGM5ZDQ2NWQ1ZCIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTA1ODc4NiwiZXhwIjoxNjg5MDg2Nzg2LCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyJdfQ.DwvqtPPWUctt8_cXBzw6Mpir4LUmg-cLpSoGg7y8lg29EzeNXy3sdP3UVDMS6KnmfX5JnpVCE5SPO88S__iexRXmioDjXSYSPJGSOTiTnoT0ZbrJDuosI62ahzTRJMcfiwkrWnR8nRbIWvgMbhCFFOmLeUH9bc1ZZGzsPW6M821mOGEuLkh1hk8pMaD788sfzqZmzKVNEQqirm0u4En2B-HpMwVa4BoRSaK-N6JzcHXMJmW-aufHfW_oU2VdHry8whhfUxk59OJxmtN1z3P52szAcDGjde1-eik7QEDJvBJQtups5Xybepv5kqQRsvucWFJDRObrYY3jG-hkImifoA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Value contains drinks array', function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200',function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403, since Barista doesn't have permission to add new drink\", function(){\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403, since barista is forbidden to edit drink recipe\", function() {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 403, since barista is not allowed to delete a drink\", function() {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWNmZDU3NmU4NmFlYjkyYTUxZTgxNCIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTA1ODg5NywiZXhwIjoxNjg5MDg2ODk3LCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.0ZHbI78Gw1lTfNzIgeAVmfs90ADKJc41-_C6K_BIhwji4hukYTa3jyNzv0Ami3wktehBRGg2mHi5PKh_DWygUwmsIhuNjniFn7w3-TI9Q9H1XvjwSx5tcypDQNk7K-sKkNTNHq7atQoy0e0VGTcpfKxxv0ACTTB7ZGY0_9ByA89q4b-JY7XkQ9WCKlQJdQp9qDzdVWNFK8JKu9RjOcf7AVNHA81xaLvuTWl8VzVCnhlJJCO8xMyqYbw1eQcbEYjpeVx1jTtDVthsbJ-FqLCDytFHSEorVnK5VMss5sVjN26vpXDsEqXTRn4dFuVyxK_Q5qbQrBEkAtxZGDbxbof9ww",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contains drinks array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200,\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contain drinks array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks-detail",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contains array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Water3\",\r\n    \"recipe\":[{\r\n        \"name\": \"Water\",\r\n        \"color\": \"blue\",\r\n        \"parts\": 1\r\n    }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/drinks",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Value contain array\", function() {\r",
									"    let jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.drinks).to.be.an('array')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Water3\",\r\n    \"recipe\":{\r\n        \"name\": \"Water\",\r\n        \"color\": \"lightblue\",\r\n        \"parts\": 1\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/drinks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/drinks/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"drinks",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Im5fMTNUb1FlcVJHOFFOcGJWTlYxaiJ9.eyJpc3MiOiJodHRwczovL2NvZmZlZXNob3AtYmVuenBzMDEudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDY0YWNmZDc1MWQzOTU4MDBkYjE1Y2U3MCIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCIsImlhdCI6MTY4OTA1ODk2NywiZXhwIjoxNjg5MDg2OTY3LCJhenAiOiIweXUzcnVYU2J2MzdHVXJubG91cGc1RHZOSzJ6RVBOYiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.dNFPDROMBAbzIHp59GaeDtvm80Tbr5MGlDO9fvoQLfYS48hno8ylrtd8Fe4Unl0zax4WmkQZTADWJi8-JbmqeGmPZYW-0ClrkLhwUathXXKiXHRcThP8u2WmGNYKJQgS8DDKAojP41uGOQi1EwBbIG6MTqEPlIv3d-x_Zv7KsdCcmuCaPAXKYM-HzEXg5FR5Rm5Yx3J4xcbyGlQ_K-95N3_P_d5p5mjpXfhVXpiK4l1iSx_dLo2jHyx4-wB9WUUetmamEL3CNjWSa6wI5VAG4EUsxD5pc8JRBbDofD2KCrTS52FZNITkBKeVKu0OkT3pbjZ5X0rZS439xBO03h0AoA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}